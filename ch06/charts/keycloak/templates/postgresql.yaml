apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.postgresql.name }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ .Values.postgresql.name }}
  selector:
    matchLabels:
      app: postgresql-db
  replicas: 1
  template:
    metadata:
      labels:
        app: postgresql-db
    spec:
      containers:
        - name: {{ .Values.postgresql.name }}
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          volumeMounts:
            - mountPath: /data
              name: data
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secret.name }}
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.secret.name }}
                  key: password
            - name: PGDATA
              value: /data/pgdata
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.databaseName }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.postgresql.storage.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.postgresql.name }}
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: postgresql-db
  type: ClusterIP
  ports:
  - port: {{ .Values.postgresql.service.port }}
    targetPort: {{ .Values.postgresql.service.port }}

